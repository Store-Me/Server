name: Gradle Build

on:
  push:
    branches: [ "main", "develop" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'oracle'

      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Create application.yml
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.APPLICATION_YML }}" > src/main/resources/application.yml

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test
        shell: bash

      ###### CD ######
      - name: Login to Dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker build & push to DockerHub
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/store-me:${{ github.sha }}

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST_IP }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          envs: GITHUB_SHA
          script: |
            docker -v
            docker ps
            docker stop $(docker ps -aq)
            docker rm $(docker ps -aq)
            docker image prune -f
            docker pull ${{ secrets.DOCKER_USERNAME }}/store-me:${{ github.sha }}
            docker run -d \
              --log-driver=awslogs \
              --log-opt awslogs-region=ap-northeast-2 \
              --log-opt awslogs-group=storeme-docker-log \
              --log-opt awslogs-stream=dodal-docker-backend \
              -p 80:8080 \
              --name ${{ secrets.CONTAINER_NAME }} \
              ${{ secrets.DOCKER_USERNAME }}/store-me:${{ github.sha }}
            docker ps
